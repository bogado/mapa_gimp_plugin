!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	4.0.3	//
AUTHOR	./gimp_plugins/plugin.h	10;"	d
AUTHOR	./gimp_plugins/teste/teste.h	118;"	d
AUTHOR	./mapmake.h	10;"	d
BLURB	./gimp_plugins/plugin.h	8;"	d
BLURB	./gimp_plugins/teste/teste.h	42;"	d
BLURB	./mapmake.h	8;"	d
COPYRIGHT	./gimp_plugins/plugin.h	11;"	d
COPYRIGHT	./gimp_plugins/teste/teste.h	187;"	d
COPYRIGHT	./mapmake.h	11;"	d
DATA	./gimp_plugins/plugin.h	12;"	d
DATA	./gimp_plugins/teste/teste.h	222;"	d
DATA	./mapmake.h	12;"	d
ENTRY_WIDTH	./gimp_plugins/rand-noted.c	139;"	d	file:
HELP	./gimp_plugins/plugin.h	9;"	d
HELP	./gimp_plugins/teste/teste.h	83;"	d
HELP	./mapmake.h	9;"	d
IMAGE_TYPES	./gimp_plugins/plugin.h	16;"	d
IMAGE_TYPES	./gimp_plugins/teste/teste.h	281;"	d
IMAGE_TYPES	./mapmake.h	16;"	d
NOME	./gimp_plugins/plugin.h	7;"	d
NOME	./gimp_plugins/teste/teste.h	7;"	d
NOME	./mapmake.h	7;"	d
PATH	./gimp_plugins/plugin.h	15;"	d
PATH	./gimp_plugins/teste/teste.h	259;"	d
PATH	./mapmake.h	15;"	d
PLUG_IN_INFO	./gimp_plugins/plugin.h	/^GimpPlugInInfo PLUG_IN_INFO = $/;"	v
PLUG_IN_INFO	./gimp_plugins/rand-noted.c	/^GPlugInInfo PLUG_IN_INFO = {$/;"	v
PLUG_IN_INFO	./gimp_plugins/teste/teste.h	/^GimpPlugInInfo PLUG_IN_INFO = $/;"	v
PLUG_IN_INFO	./mapmake.h	/^GimpPlugInInfo PLUG_IN_INFO = $/;"	v
PLUG_IN_NAME	./gimp_plugins/rand-noted.c	/^char *PLUG_IN_NAME[] = {$/;"	v
PROG_UPDATE_TIME	./gimp_plugins/rand-noted.c	104;"	d	file:
RNDM_HURL	./gimp_plugins/rand-noted.c	125;"	d	file:
RNDM_PICK	./gimp_plugins/rand-noted.c	126;"	d	file:
RNDM_SLUR	./gimp_plugins/rand-noted.c	127;"	d	file:
RNDM_VERSION	./gimp_plugins/rand-noted.c	/^char *RNDM_VERSION[] = {$/;"	v
RandomizeInterface	./gimp_plugins/rand-noted.c	/^} RandomizeInterface;$/;"	t	file:
RandomizeVals	./gimp_plugins/rand-noted.c	/^} RandomizeVals;$/;"	t	file:
SCALE_WIDTH	./gimp_plugins/rand-noted.c	140;"	d	file:
SEED_TIME	./gimp_plugins/rand-noted.c	133;"	d	file:
SEED_USER	./gimp_plugins/rand-noted.c	134;"	d	file:
execute_plugin	./gimp_plugins/plugin.c	/^gint32 execute_plugin(GimpDrawable* d, plugin_data* data)$/;"	f
execute_plugin	./mapmake.c	/^gint32 execute_plugin(GimpDrawable* d, plugin_data* data)$/;"	f
execute_teste	./gimp_plugins/teste/teste.c	/^gint32 execute_teste(GimpDrawable* d, teste_data* data)$/;"	f
init_data	./gimp_plugins/plugin.c	/^void init_data(gint npar, GimpParam * par, plugin_data *data)$/;"	f
init_data	./gimp_plugins/teste/teste.c	/^void init_data(gint npar, GimpParam * par, teste_data *data)$/;"	f
init_data	./mapmake.c	/^void init_data(gint npar, GimpParam * par, plugin_data *data)$/;"	f
inline	./gimp_plugins/rand-noted.c	91;"	d	file:
pdb_nparams	./gimp_plugins/plugin.h	/^static const int pdb_nparams = sizeof(pdb_params) \/ sizeof(GimpParamDef);$/;"	v
pdb_nparams	./gimp_plugins/teste/teste.h	/^static const int pdb_nparams = sizeof(pdb_params) \/ sizeof(GimpParamDef);$/;"	v
pdb_nparams	./mapmake.h	/^static const int pdb_nparams = sizeof(pdb_params) \/ sizeof(GimpParamDef);$/;"	v
pdb_params	./gimp_plugins/plugin.h	/^static GimpParamDef pdb_params[] =$/;"	v
pdb_params	./gimp_plugins/teste/teste.h	/^static GimpParamDef pdb_params[] =$/;"	v
pdb_params	./mapmake.h	/^static GimpParamDef pdb_params[] =$/;"	v
pivals	./gimp_plugins/rand-noted.c	/^static RandomizeVals pivals = {$/;"	v	file:
plugin_data	./gimp_plugins/plugin.h	/^} plugin_data;$/;"	t
plugin_data	./mapmake.h	/^} plugin_data;$/;"	t
query	./gimp_plugins/plugin.c	/^static void query(void)$/;"	f	file:
query	./gimp_plugins/rand-noted.c	/^query()$/;"	f	file:
query	./gimp_plugins/teste/teste.c	/^static void query(void)$/;"	f	file:
query	./mapmake.c	/^static void query(void)$/;"	f	file:
randomize	./gimp_plugins/rand-noted.c	/^randomize(GDrawable *drawable)$/;"	f	file:
randomize_dialog	./gimp_plugins/rand-noted.c	/^randomize_dialog()$/;"	f	file:
randomize_ok_callback	./gimp_plugins/rand-noted.c	/^randomize_ok_callback(GtkWidget *widget, gpointer data) {$/;"	f	file:
randomize_prepare_row	./gimp_plugins/rand-noted.c	/^randomize_prepare_row(GPixelRgn *pixel_rgn, guchar *data, int x, int y, int w)$/;"	f	file:
rndm_int	./gimp_plugins/rand-noted.c	/^static RandomizeInterface rndm_int = {$/;"	v	file:
rndm_pct	./gimp_plugins/rand-noted.c	/^    gdouble rndm_pct;     \/* likelihood of randomization (as %age) *\/$/;"	m	struct:
rndm_rcount	./gimp_plugins/rand-noted.c	/^    gdouble rndm_rcount;  \/* repeat count *\/$/;"	m	struct:
rndm_seed	./gimp_plugins/rand-noted.c	/^    gint rndm_seed;       \/* seed value for rand() function *\/$/;"	m	struct:
rndm_type	./gimp_plugins/rand-noted.c	/^gint rndm_type = RNDM_HURL;  \/* hurl, pick, etc. *\/$/;"	v
run	./gimp_plugins/plugin.c	/^static void run(gchar G_GNUC_UNUSED *nome, gint nparams, GimpParam * params, gint *nretvals, GimpParam ** retparams)$/;"	f	file:
run	./gimp_plugins/rand-noted.c	/^    gint run;$/;"	m	struct:
run	./gimp_plugins/rand-noted.c	/^run(char *name, int nparams, GParam *param, int *nreturn_vals,$/;"	f	file:
run	./gimp_plugins/teste/teste.c	/^static void run(gchar G_GNUC_UNUSED *nome, gint nparams, GimpParam * params, gint *nretvals, GimpParam ** retparams)$/;"	f	file:
run	./mapmake.c	/^static void run(gchar G_GNUC_UNUSED *nome, gint nparams, GimpParam * params, gint *nretvals, GimpParam ** retparams)$/;"	f	file:
seed_type	./gimp_plugins/rand-noted.c	/^    gint seed_type;       \/* seed init. type - current time or user value *\/$/;"	m	struct:
show_dialog	./gimp_plugins/plugin.c	/^void show_dialog(plugin_data* data)$/;"	f
show_dialog	./gimp_plugins/teste/teste.c	/^void show_dialog(teste_data* data)$/;"	f
show_dialog	./mapmake.c	/^void show_dialog(plugin_data* data)$/;"	f
teste	./gimp_plugins/plugin.h	/^	gint teste;$/;"	m	struct:
teste	./gimp_plugins/teste/teste.h	/^	gint teste;$/;"	m	struct:
teste	./mapmake.h	/^	gint teste;$/;"	m	struct:
teste_data	./gimp_plugins/teste/teste.h	/^} teste_data;$/;"	t
